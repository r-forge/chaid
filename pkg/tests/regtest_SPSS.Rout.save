
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("CHAID")
Loading required package: partykit
Loading required package: grid
> 
> load("auto.Rda")
> 
> # 1.) Ergebnisse stimmen mit SPSS überein:
> 
> # Einzelne Tests für modell, nutzung und tempo
> tmpauto1 <- chaid(lease ~ modell, data = auto) #passt
> plot(tmpauto1)
> print(tmpauto1)

Model formula:
lease ~ modell

Fitted party:
[1] root
|   [2] modell in 1, 2: 1 (n = 606, err = 10.4%)
|   [3] modell in 3, 4: 1 (n = 187, err = 27.8%)

Number of inner nodes:    1
Number of terminal nodes: 2
> 
> tmpauto2 <- chaid(lease ~ nutzung, data = auto) #passt     
> plot(tmpauto2)
> print(tmpauto2)

Model formula:
lease ~ nutzung

Fitted party:
[1] root
|   [2] nutzung in 1: 1 (n = 293, err = 1.4%)
|   [3] nutzung in 2: 1 (n = 456, err = 20.2%)
|   [4] nutzung in 3: 1 (n = 44, err = 43.2%)

Number of inner nodes:    1
Number of terminal nodes: 3
> 
> tmpauto3 <- chaid(lease ~ tempo, data = auto) # passt
> plot(tmpauto3)
> print(tmpauto3)

Model formula:
lease ~ tempo

Fitted party:
[1] root
|   [2] tempo in 1, 2: 1 (n = 416, err = 8.4%)
|   [3] tempo in 3, 4: 1 (n = 377, err = 21.2%)

Number of inner nodes:    1
Number of terminal nodes: 2
> 
> # Zweier-Kombi-Tests
> tmpauto4 <- chaid(lease ~ modell + nutzung, data = auto) # passt
> plot(tmpauto4)
> print(tmpauto4)

Model formula:
lease ~ modell + nutzung

Fitted party:
[1] root
|   [2] nutzung in 1: 1 (n = 293, err = 1.4%)
|   [3] nutzung in 2
|   |   [4] modell in 1, 2: 1 (n = 306, err = 16.3%)
|   |   [5] modell in 3, 4: 1 (n = 150, err = 28.0%)
|   [6] nutzung in 3: 1 (n = 44, err = 43.2%)

Number of inner nodes:    2
Number of terminal nodes: 4
> 
> tmpauto5 <- chaid(lease ~ modell + tempo, data = auto) # passt  
> plot(tmpauto5)
> print(tmpauto5)

Model formula:
lease ~ modell + tempo

Fitted party:
[1] root
|   [2] modell in 1, 2
|   |   [3] tempo in 1, 2: 1 (n = 377, err = 7.7%)
|   |   [4] tempo in 3, 4: 1 (n = 229, err = 14.8%)
|   [5] modell in 3, 4: 1 (n = 187, err = 27.8%)

Number of inner nodes:    2
Number of terminal nodes: 3
> 
> tmpauto6 <- chaid(lease ~ nutzung + tempo, data = auto)  # passt
> plot(tmpauto6)
> print(tmpauto6)

Model formula:
lease ~ nutzung + tempo

Fitted party:
[1] root
|   [2] nutzung in 1: 1 (n = 293, err = 1.4%)
|   [3] nutzung in 2
|   |   [4] tempo in 1, 2: 1 (n = 193, err = 14.5%)
|   |   [5] tempo in 3, 4: 1 (n = 263, err = 24.3%)
|   [6] nutzung in 3: 1 (n = 44, err = 43.2%)

Number of inner nodes:    2
Number of terminal nodes: 4
> 
> # Dreier-Kombi-Test
> tmpauto7 <- chaid(lease ~ nutzung + tempo + modell, data = auto) # passt
> plot(tmpauto7)
> print(tmpauto7)

Model formula:
lease ~ nutzung + tempo + modell

Fitted party:
[1] root
|   [2] nutzung in 1: 1 (n = 293, err = 1.4%)
|   [3] nutzung in 2
|   |   [4] modell in 1, 2: 1 (n = 306, err = 16.3%)
|   |   [5] modell in 3, 4: 1 (n = 150, err = 28.0%)
|   [6] nutzung in 3: 1 (n = 44, err = 43.2%)

Number of inner nodes:    2
Number of terminal nodes: 4
> 
> # => modell und nutzung und tempo in den datensatz  !
> 
> 
> 
> ################################################################################
> tmpauto8 <- chaid(lease ~ beruf, data = auto) # passt
> plot(tmpauto8)
> print(tmpauto8)

Model formula:
lease ~ beruf

Fitted party:
[1] root
|   [2] beruf in 1, 2: 1 (n = 387, err = 23.8%)
|   [3] beruf in 3: 1 (n = 406, err = 5.7%)

Number of inner nodes:    1
Number of terminal nodes: 2
> 
> tmpauto9 <- chaid(lease ~ modell + beruf, data = auto)  # passt
> plot(tmpauto9)
> print(tmpauto9)

Model formula:
lease ~ modell + beruf

Fitted party:
[1] root
|   [2] beruf in 1, 2
|   |   [3] modell in 1, 2: 1 (n = 231, err = 18.6%)
|   |   [4] modell in 3, 4: 1 (n = 156, err = 31.4%)
|   [5] beruf in 3: 1 (n = 406, err = 5.7%)

Number of inner nodes:    2
Number of terminal nodes: 3
> 
> tmpauto10 <- chaid(lease ~ nutzung + beruf, data = auto) # passt nicht (nur zweiter Split nicht) 
> plot(tmpauto10)
> print(tmpauto10)

Model formula:
lease ~ nutzung + beruf

Fitted party:
[1] root
|   [2] nutzung in 1: 1 (n = 293, err = 1.4%)
|   [3] nutzung in 2
|   |   [4] beruf in 1: 1 (n = 200, err = 27.5%)
|   |   [5] beruf in 2, 3: 1 (n = 256, err = 14.5%)
|   [6] nutzung in 3: 1 (n = 44, err = 43.2%)

Number of inner nodes:    2
Number of terminal nodes: 4
> 
> tmpauto11 <- chaid(lease ~ modell + nutzung + beruf, data = auto) # passt auch wieder bei 2.split (beruf) nciht
> plot(tmpauto11)
> print(tmpauto11)

Model formula:
lease ~ modell + nutzung + beruf

Fitted party:
[1] root
|   [2] nutzung in 1: 1 (n = 293, err = 1.4%)
|   [3] nutzung in 2
|   |   [4] beruf in 1: 1 (n = 200, err = 27.5%)
|   |   [5] beruf in 2, 3: 1 (n = 256, err = 14.5%)
|   [6] nutzung in 3: 1 (n = 44, err = 43.2%)

Number of inner nodes:    2
Number of terminal nodes: 4
> 
> 
> # Tests mit Datensatz kaffee
> 
> load("kaffee.Rda")
> 
> # 1.) Nur mit klasse als Einflussgröße => Ergebnis stimmt mit SPSS überein
> 
> tmpkaffee1 <- chaid(treue ~ klasse, data = kaffee)
> plot(tmpkaffee1)
> print(tmpkaffee1)

Model formula:
treue ~ klasse

Fitted party:
[1] root
|   [2] klasse in 1, 2: 1 (n = 46505, err = 42.8%)
|   [3] klasse in 3: 1 (n = 49052, err = 44.4%)
|   [4] klasse in 4, 5: 1 (n = 35429, err = 40.2%)

Number of inner nodes:    1
Number of terminal nodes: 3
> 
> # 2.) Mit Klasse und Einkommen => Ergebnis stimmt mit SPSS überein
> 
> tmpkaffee2 <- chaid(treue ~ klasse + einkm, data=kaffee)
> plot(tmpkaffee2)
> print(tmpkaffee2)

Model formula:
treue ~ klasse + einkm

Fitted party:
[1] root
|   [2] klasse in 1, 2
|   |   [3] einkm in 1, 2, 3
|   |   |   [4] klasse in 1, 3, 4, 5
|   |   |   |   [5] einkm in 1: 1 (n = 11857, err = 42.0%)
|   |   |   |   [6] einkm in 2: 2 (n = 654, err = 45.4%)
|   |   |   |   [7] einkm in 3, 4: 1 (n = 4496, err = 42.2%)
|   |   |   [8] klasse in 2
|   |   |   |   [9] einkm in 1: 1 (n = 4974, err = 45.5%)
|   |   |   |   [10] einkm in 2: 1 (n = 1935, err = 39.2%)
|   |   |   |   [11] einkm in 3, 4: 1 (n = 8293, err = 44.4%)
|   |   [12] einkm in 4: 1 (n = 14296, err = 41.8%)
|   [13] klasse in 3
|   |   [14] einkm in 1: 2 (n = 3842, err = 48.9%)
|   |   [15] einkm in 2: 1 (n = 13094, err = 44.9%)
|   |   [16] einkm in 3, 4: 1 (n = 32116, err = 43.3%)
|   [17] klasse in 4, 5: 1 (n = 35429, err = 40.2%)

Number of inner nodes:     6
Number of terminal nodes: 11
> 
> # 3.) Nur nach Preis => Ergebnis stimmt mit SPSS überein
> 
> tmpkaffee3 <- chaid(treue ~ preis, data=kaffee)
> plot(tmpkaffee3)
> print(tmpkaffee3)

Model formula:
treue ~ preis

Fitted party:
[1] root
|   [2] preis in 1: 1 (n = 29637, err = 40.2%)
|   [3] preis in 2: 1 (n = 67374, err = 45.0%)
|   [4] preis in 3: 1 (n = 33975, err = 40.2%)

Number of inner nodes:    1
Number of terminal nodes: 3
>            
> # 4.) Nach Preis und Einkommen => Ergebnis stimmt mit SPSS überein 
> 
> tmpkaffee4 <- chaid(treue ~ einkm + preis, data = kaffee)
> plot(tmpkaffee4)
> print(tmpkaffee4)

Model formula:
treue ~ einkm + preis

Fitted party:
[1] root
|   [2] preis in 1
|   |   [3] einkm in 1, 2: 1 (n = 15802, err = 41.6%)
|   |   [4] einkm in 3, 4: 1 (n = 13835, err = 38.7%)
|   [5] preis in 2
|   |   [6] einkm in 1, 2: 1 (n = 34650, err = 44.6%)
|   |   [7] einkm in 3, 4: 1 (n = 32724, err = 45.5%)
|   [8] preis in 3
|   |   [9] einkm in 1: 1 (n = 9057, err = 40.4%)
|   |   [10] einkm in 2: 1 (n = 8514, err = 38.5%)
|   |   [11] einkm in 3: 1 (n = 10129, err = 42.1%)
|   |   [12] einkm in 4: 1 (n = 6275, err = 39.1%)

Number of inner nodes:    4
Number of terminal nodes: 8
> 
> # 5.) Nach Einkommen  => Ergebnis stimmt mit SPSS überein
> tmpkaffee5 <- chaid(treue ~ einkm, data = kaffee)
> plot(tmpkaffee5)
> print(tmpkaffee5)

Model formula:
treue ~ einkm

Fitted party:
[1] root
|   [2] einkm in 1: 1 (n = 33480, err = 43.0%)
|   [3] einkm in 2: 1 (n = 34543, err = 42.1%)
|   [4] einkm in 3: 1 (n = 40557, err = 43.2%)
|   [5] einkm in 4: 1 (n = 22406, err = 42.2%)

Number of inner nodes:    1
Number of terminal nodes: 4
> 
> ###############################################################################
> 
> # 6.) Nach Preis und Klasse - passt nicht
> tmpkaffee6 <- chaid(treue ~ preis + klasse, data = kaffee)
> plot(tmpkaffee6)
> print(tmpkaffee6)

Model formula:
treue ~ preis + klasse

Fitted party:
[1] root
|   [2] preis in 1: 1 (n = 29637, err = 40.2%)
|   [3] preis in 2
|   |   [4] klasse in 1, 2, 3: 1 (n = 49566, err = 45.9%)
|   |   [5] klasse in 4, 5: 1 (n = 17808, err = 42.6%)
|   [6] preis in 3
|   |   [7] klasse in 1: 1 (n = 6812, err = 38.9%)
|   |   [8] klasse in 2, 5: 1 (n = 8702, err = 40.8%)
|   |   [9] klasse in 3: 1 (n = 11675, err = 42.6%)
|   |   [10] klasse in 4: 1 (n = 6786, err = 36.5%)

Number of inner nodes:    3
Number of terminal nodes: 7
> 
> # 7.) Nach Preis, Klasse und Einkommen - passt auch nicht
> tmpkaffee7 <- chaid(treue ~ preis + klasse + einkm, data = kaffee)
> plot(tmpkaffee7)
> print(tmpkaffee7)

Model formula:
treue ~ preis + klasse + einkm

Fitted party:
[1] root
|   [2] preis in 1
|   |   [3] einkm in 1, 2
|   |   |   [4] klasse in 1, 3
|   |   |   |   [5] einkm in 1: 1 (n = 3219, err = 43.5%)
|   |   |   |   [6] einkm in 2, 3, 4
|   |   |   |   |   [7] klasse in 1, 2, 4, 5: 2 (n = 232, err = 43.1%)
|   |   |   |   |   [8] klasse in 3: 1 (n = 3359, err = 45.2%)
|   |   |   [9] klasse in 2, 4
|   |   |   |   [10] einkm in 1
|   |   |   |   |   [11] klasse in 1, 2, 3, 5: 1 (n = 1084, err = 39.6%)
|   |   |   |   |   [12] klasse in 4: 1 (n = 1058, err = 45.6%)
|   |   |   |   [13] einkm in 2, 3, 4: 1 (n = 4311, err = 38.4%)
|   |   |   [14] klasse in 5
|   |   |   |   [15] einkm in 1: 1 (n = 2148, err = 39.1%)
|   |   |   |   [16] einkm in 2, 3, 4: 1 (n = 391, err = 28.4%)
|   |   [17] einkm in 3, 4
|   |   |   [18] klasse in 1, 2, 3, 5: 1 (n = 12867, err = 39.2%)
|   |   |   [19] klasse in 4: 1 (n = 968, err = 32.4%)
|   [20] preis in 2
|   |   [21] klasse in 1, 2, 3
|   |   |   [22] einkm in 1
|   |   |   |   [23] klasse in 1, 4, 5: 1 (n = 5967, err = 44.7%)
|   |   |   |   [24] klasse in 2: 1 (n = 2457, err = 47.3%)
|   |   |   |   [25] klasse in 3: 2 (n = 2116, err = 46.5%)
|   |   |   [26] einkm in 2, 3, 4: 1 (n = 39026, err = 45.6%)
|   |   [27] klasse in 4, 5
|   |   |   [28] einkm in 1
|   |   |   |   [29] klasse in 1, 2, 3, 4: 1 (n = 2690, err = 38.9%)
|   |   |   |   [30] klasse in 5: 1 (n = 3684, err = 43.1%)
|   |   |   [31] einkm in 2, 3, 4: 1 (n = 11434, err = 43.3%)
|   [32] preis in 3
|   |   [33] klasse in 1
|   |   |   [34] einkm in 1: 1 (n = 3620, err = 37.1%)
|   |   |   [35] einkm in 2: 2 (n = 151, err = 43.0%)
|   |   |   [36] einkm in 3, 4: 1 (n = 3041, err = 40.1%)
|   |   [37] klasse in 2, 5
|   |   |   [38] einkm in 1
|   |   |   |   [39] klasse in 1, 2, 3, 4: 1 (n = 1433, err = 46.9%)
|   |   |   |   [40] klasse in 5: 1 (n = 1825, err = 41.3%)
|   |   |   [41] einkm in 2: 1 (n = 1129, err = 35.1%)
|   |   |   [42] einkm in 3, 4: 1 (n = 4315, err = 40.1%)
|   |   [43] klasse in 3
|   |   |   [44] einkm in 1: 2 (n = 777, err = 49.0%)
|   |   |   [45] einkm in 2, 3: 1 (n = 8495, err = 43.0%)
|   |   |   [46] einkm in 4: 1 (n = 2403, err = 38.7%)
|   |   [47] klasse in 4: 1 (n = 6786, err = 36.5%)

Number of inner nodes:    19
Number of terminal nodes: 28
> 
> # Also am besten nur Datensatz mit treue als abhängige und preis und einkm als
> # Einflussgrößen oder klasse und einkm als EG (preis und klasse zusammen
> # funktioniert nicht so gut ...)
> 
> 
> # Tests mit Datensatz kredit
> 
> load("kredit.Rda")
> 
> # 1.) verm+famges; ok
> tempkredit <- chaid(kredit ~ verm + famges, data=kredit)
> plot(tempkredit)
> print(tempkredit)

Model formula:
kredit ~ verm + famges

Fitted party:
[1] root
|   [2] verm in 1
|   |   [3] famges in 1, 2: 1 (n = 106, err = 31.1%)
|   |   [4] famges in 3, 4: 1 (n = 176, err = 15.3%)
|   [5] verm in 2, 3: 1 (n = 564, err = 30.7%)
|   [6] verm in 4: 1 (n = 154, err = 43.5%)

Number of inner nodes:    2
Number of terminal nodes: 4
> 
> # 2.) verm; ok
> tempkredit <- chaid(kredit ~ verm, data=kredit)
> plot(tempkredit)
> print(tempkredit)

Model formula:
kredit ~ verm

Fitted party:
[1] root
|   [2] verm in 1: 1 (n = 282, err = 21.3%)
|   [3] verm in 2, 3: 1 (n = 564, err = 30.7%)
|   [4] verm in 4: 1 (n = 154, err = 43.5%)

Number of inner nodes:    1
Number of terminal nodes: 3
> 
> # 3.) famges; ok
> tempkredit <- chaid(kredit ~ famges, data=kredit)
> plot(tempkredit)
> print(tempkredit)

Model formula:
kredit ~ famges

Fitted party:
[1] root
|   [2] famges in 1, 2: 1 (n = 360, err = 35.8%)
|   [3] famges in 3, 4: 1 (n = 640, err = 26.7%)

Number of inner nodes:    1
Number of terminal nodes: 2
> 
> ### orders
> load("orders.Rda")
> temporders <- chaid(RESP ~ REG + BUSIVOL + FIRMSIZE + SPEC + AGE,
+                     data = orders, weights = FREQ)
> plot(temporders)
> print(temporders)

Model formula:
RESP ~ REG + BUSIVOL + FIRMSIZE + SPEC + AGE

Fitted party:
[1] root
|   [2] BUSIVOL < 250.000 Euro
|   |   [3] REG in mostly in cities: no order (n = 1241, err = 4.8%)
|   |   [4] REG in mostly rural, half rural, half cities: no order (n = 2853, err = 2.6%)
|   [5] BUSIVOL in 250.000-500.000 Euro
|   |   [6] REG in mostly in cities: no order (n = 3079, err = 7.3%)
|   |   [7] REG in mostly rural, half rural, half cities: no order (n = 3954, err = 3.9%)
|   [8] BUSIVOL in 500.000-1.000.000 Euro
|   |   [9] REG in mostly in cities
|   |   |   [10] SPEC in working seldom with bitumen: no order (n = 1332, err = 8.3%)
|   |   |   [11] SPEC in working a lot with bitumen, working with bitumen all the time: no order (n = 2081, err = 11.6%)
|   |   [12] REG in mostly rural, half rural, half cities: no order (n = 1721, err = 5.1%)
|   [13] BUSIVOL >= 1.000.000 Euro
|   |   [14] SPEC in working seldom with bitumen: no order (n = 791, err = 8.6%)
|   |   [15] SPEC in working a lot with bitumen: no order (n = 799, err = 12.8%)
|   |   [16] SPEC in working with bitumen all the time
|   |   |   [17] FIRMSIZE in 1-10 workers, 10-100 workers: no order (n = 483, err = 19.7%)
|   |   |   [18] FIRMSIZE in over 100 workers: no order (n = 436, err = 13.8%)

Number of inner nodes:     7
Number of terminal nodes: 11
> 
> ### Tests on car data set
> load("car.Rda")
> tempcar <- chaid(CAR ~ buying + doors + persons + lug_boot + safety, data = car)  
> plot(tempcar)
> print(tempcar)

Model formula:
CAR ~ buying + doors + persons + lug_boot + safety

Fitted party:
[1] root
|   [2] safety in high
|   |   [3] persons in 2: unacc (n = 192, err = 0.0%)
|   |   [4] persons in 4, more
|   |   |   [5] buying in high: acc (n = 96, err = 28.1%)
|   |   |   [6] buying in low
|   |   |   |   [7] lug_boot in big: vgood (n = 32, err = 25.0%)
|   |   |   |   [8] lug_boot in med
|   |   |   |   |   [9] doors in 2, 3: acc (n = 16, err = 56.2%)
|   |   |   |   |   [10] doors in 4, 5more: vgood (n = 16, err = 25.0%)
|   |   |   |   [11] lug_boot in small
|   |   |   |   |   [12] doors in 2: unacc (n = 8, err = 50.0%)
|   |   |   |   |   [13] doors in 3, 4, 5more: acc (n = 24, err = 50.0%)
|   |   |   [14] buying in med
|   |   |   |   [15] lug_boot in big, med: acc (n = 64, err = 45.3%)
|   |   |   |   [16] lug_boot in small
|   |   |   |   |   [17] doors in 2: unacc (n = 8, err = 50.0%)
|   |   |   |   |   [18] doors in 3, 4, 5more: acc (n = 24, err = 25.0%)
|   |   |   [19] buying in vhigh: unacc (n = 96, err = 47.9%)
|   [20] safety in low: unacc (n = 576, err = 0.0%)
|   [21] safety in med
|   |   [22] persons in 2: unacc (n = 192, err = 0.0%)
|   |   [23] persons in 4, more
|   |   |   [24] buying in high
|   |   |   |   [25] lug_boot in big: acc (n = 32, err = 25.0%)
|   |   |   |   [26] lug_boot in med
|   |   |   |   |   [27] doors in 2, 3: unacc (n = 16, err = 18.8%)
|   |   |   |   |   [28] doors in 4, 5more: acc (n = 16, err = 25.0%)
|   |   |   |   [29] lug_boot in small: unacc (n = 32, err = 0.0%)
|   |   |   [30] buying in low
|   |   |   |   [31] lug_boot in big, med: acc (n = 64, err = 45.3%)
|   |   |   |   [32] lug_boot in small: acc (n = 32, err = 34.4%)
|   |   |   [33] buying in med
|   |   |   |   [34] lug_boot in big: acc (n = 32, err = 25.0%)
|   |   |   |   [35] lug_boot in med: acc (n = 32, err = 34.4%)
|   |   |   |   [36] lug_boot in small: unacc (n = 32, err = 43.8%)
|   |   |   [37] buying in vhigh
|   |   |   |   [38] lug_boot in big, med: unacc (n = 64, err = 40.6%)
|   |   |   |   [39] lug_boot in small: unacc (n = 32, err = 0.0%)

Number of inner nodes:    15
Number of terminal nodes: 24
> 
> proc.time()
   user  system elapsed 
173.450   1.016 174.764 
