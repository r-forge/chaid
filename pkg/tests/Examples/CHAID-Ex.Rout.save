
R version 2.8.0 (2008-10-20)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### * <HEADER>
> ###
> attach(NULL, name = "CheckExEnv")
> assign("nameEx", 
+        local({
+ 	   s <- "__{must remake R-ex/*.R}__"
+            function(new) {
+                if(!missing(new)) s <<- new else s
+            }
+        }),
+        pos = "CheckExEnv")
> ## Add some hooks to label plot pages for base and grid graphics
> assign("base_plot_hook",
+        function() {
+            pp <- par(c("mfg","mfcol","oma","mar"))
+            if(all(pp$mfg[1:2] == c(1, pp$mfcol[2]))) {
+                outer <- (oma4 <- pp$oma[4]) > 0; mar4 <- pp$mar[4]
+                mtext(sprintf("help(\"%s\")", nameEx()), side = 4,
+                      line = if(outer)max(1, oma4 - 1) else min(1, mar4 - 1),
+                outer = outer, adj = 1, cex = .8, col = "orchid", las=3)
+            }
+        },
+        pos = "CheckExEnv")
> assign("grid_plot_hook",
+        function() {
+            grid::pushViewport(grid::viewport(width=grid::unit(1, "npc") - 
+                               grid::unit(1, "lines"), x=0, just="left"))
+            grid::grid.text(sprintf("help(\"%s\")", nameEx()),
+                            x=grid::unit(1, "npc") + grid::unit(0.5, "lines"),
+                            y=grid::unit(0.8, "npc"), rot=90,
+                            gp=grid::gpar(col="orchid"))
+        },
+        pos = "CheckExEnv")
> setHook("plot.new",     get("base_plot_hook", pos = "CheckExEnv"))
> setHook("persp",        get("base_plot_hook", pos = "CheckExEnv"))
> setHook("grid.newpage", get("grid_plot_hook", pos = "CheckExEnv"))
> assign("cleanEx",
+        function(env = .GlobalEnv) {
+ 	   rm(list = ls(envir = env, all.names = TRUE), envir = env)
+            RNGkind("default", "default")
+ 	   set.seed(1)
+    	   options(warn = 1)
+ 	   .CheckExEnv <- as.environment("CheckExEnv")
+ 	   delayedAssign("T", stop("T used instead of TRUE"),
+ 		  assign.env = .CheckExEnv)
+ 	   delayedAssign("F", stop("F used instead of FALSE"),
+ 		  assign.env = .CheckExEnv)
+ 	   sch <- search()
+ 	   newitems <- sch[! sch %in% .oldSearch]
+ 	   for(item in rev(newitems))
+                eval(substitute(detach(item), list(item=item)))
+ 	   missitems <- .oldSearch[! .oldSearch %in% sch]
+ 	   if(length(missitems))
+ 	       warning("items ", paste(missitems, collapse=", "),
+ 		       " have been removed from the search path")
+        },
+        pos = "CheckExEnv")
> assign("ptime", proc.time(), pos = "CheckExEnv")
> ## at least one package changes these via ps.options(), so do this
> ## before loading the package.
> ## Use postscript as incomplete files may be viewable, unlike PDF.
> ## Choose a size that is close to on-screen devices, fix paper
> ps.options(width = 7, height = 7, paper = "a4", reset = TRUE)
> grDevices::postscript("CHAID-Ex.ps")
> 		      
> assign("par.postscript", graphics::par(no.readonly = TRUE), pos = "CheckExEnv")
> options(contrasts = c(unordered = "contr.treatment", ordered = "contr.poly"))
> options(warn = 1)    
> library('CHAID')
Loading required package: partykit
Loading required package: grid
Loading required package: mvtnorm
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> assign(".oldNS", loadedNamespaces(), pos = 'CheckExEnv')
> cleanEx(); nameEx("USvote")
> ### * USvote
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: USvote
> ### Title: U.S. 2000 Election Data
> ### Aliases: USvote
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
>   library("CHAID")
> 
>   ### fit tree to subsample
>   set.seed(290875)
>   USvoteS <- USvote[sample(1:nrow(USvote), 2000),]
>   chaidUS <- chaid(vote3 ~ gender + ager + empstat + educr + marstat, 
+                    data = USvoteS)
> 
>   print(chaidUS)

Model formula:
vote3 ~ gender + ager + empstat + educr + marstat

Fitted party:
[1] root
|   [2] marstat in married
|   |   [3] educr <HS: Gore (n = 51, err = 39.2%)  
|   |   [4] educr in HS, >HS: Bush (n = 580, err = 46.4%) 
|   |   [5] educr in College, Post Coll
|   |   |   [6] ager in 18-24, 25-34, 35-44
|   |   |   |   [7] empstat in yes, retired: Bush (n = 175, err = 38.3%) 
|   |   |   |   [8] empstat in no
|   |   |   |   |   [9] gender in male: Gore (n = 6, err = 33.3%)   
|   |   |   |   |   [10] gender in female: Bush (n = 34, err = 11.8%)  
|   |   |   [11] ager in 45-54, 55-64: Bush (n = 217, err = 46.5%) 
|   |   |   [12] ager in 65+
|   |   |   |   [13] gender in male
|   |   |   |   |   [14] educr <HS, HS, >HS, College: Bush (n = 38, err = 5.3%)   
|   |   |   |   |   [15] educr in Post Coll: Gore (n = 12, err = 41.7%)  
|   |   |   |   [16] gender in female: Gore (n = 14, err = 42.9%)  
|   [17] marstat in widowed, divorced, never married
|   |   [18] gender in male
|   |   |   [19] empstat in yes, retired
|   |   |   |   [20] educr <HS: Bush (n = 21, err = 14.3%)  
|   |   |   |   [21] educr in HS, >HS, College, Post Coll: Bush (n = 248, err = 48.0%) 
|   |   |   [22] empstat in no: Gore (n = 36, err = 25.0%)  
|   |   [23] gender in female
|   |   |   [24] ager in 18-24, 25-34, 35-44, 45-54: Gore (n = 262, err = 24.4%) 
|   |   |   [25] ager in 55-64, 65+
|   |   |   |   [26] educr <HS, HS: Gore (n = 130, err = 32.3%) 
|   |   |   |   [27] educr >HS, College, Post Coll
|   |   |   |   |   [28] marstat in married, widowed, divorced
|   |   |   |   |   |   [29] ager in 18-24, 25-34, 35-44, 45-54, 55-64: Gore (n = 18, err = 33.3%)  
|   |   |   |   |   |   [30] ager in 65+: Bush (n = 64, err = 35.9%)  
|   |   |   |   |   [31] marstat in never married: Gore (n = 24, err = 29.2%)  

Number of inner nodes:    14
Number of terminal nodes: 17
>   plot(chaidUS)
> 
> 
> 
> 
> cleanEx(); nameEx("chaid")
> ### * chaid
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: chaid
> ### Title: CHi-squared Automated Interaction Detection
> ### Aliases: chaid chaid_control
> ### Keywords: tree
> 
> ### ** Examples
> 
> 
>   library("CHAID")
> 
>   ### fit tree to subsample
>   set.seed(290875)
>   USvoteS <- USvote[sample(1:nrow(USvote), 1000),]
> 
>   ctrl <- chaid_control(minsplit = 200, minprob = 0.1)
>   chaidUS <- chaid(vote3 ~ ., data = USvoteS, control = ctrl)
> 
>   print(chaidUS)

Model formula:
vote3 ~ gender + ager + empstat + educr + marstat

Fitted party:
[1] root
|   [2] marstat in married
|   |   [3] educr <HS, HS, >HS: Gore (n = 311, err = 49.5%)
|   |   [4] educr in College, Post Coll: Bush (n = 249, err = 35.3%)
|   [5] marstat in widowed, divorced, never married
|   |   [6] gender in male: Gore (n = 159, err = 47.8%)
|   |   [7] gender in female
|   |   |   [8] ager in 18-24, 25-34, 35-44, 45-54: Gore (n = 127, err = 22.0%)
|   |   |   [9] ager in 55-64, 65+: Gore (n = 115, err = 40.9%)

Number of inner nodes:    4
Number of terminal nodes: 5
>   plot(chaidUS)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  7.688 0.008 7.704 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
